Play Framework 2.x Example Project integrating the Aloha WYSIWYG Editor
=====================================

I am con­stantly need­ing to update sta­tic con­tent in Tem­plates in my Play! Frame­work project, so I decided to inte­grate the Aloha Edi­tor, an HTML5 WYSIWYG Editor.

It is free to use, and they offer an exam­ple of inte­gra­tion an sav­ing with a POST to the server on this page: http://​www​.aloha​-edi​tor​.org/​h​o​w​t​o​-​s​t​o​r​e​-​d​a​t​a​-​w​i​t​h​-​a​l​o​h​a​-​e​d​i​t​o​r​-​a​j​a​x​.​php


UPDATE May 8, 2013: http://www.poornerd.com/2013/05/08/how-to-edit-messages-in-the-browser-while-developing-play-framework-templates/
=====================================
1) make the editing of content in various scala templates easier, by setting the scala template filename in the session using the URL as the key:
@session.put("aloha.filename." + request.uri,"index.scala.html")

2) Inline editing of ALL messages included in all templates using the @Messages("key") tag - accomplished by overwriting this.


UPDATE May 3, 2013: http://www.poornerd.com/2013/05/03/wysiwyg-editing-of-play-framework-templates-with-the-aloha-editor/
=====================================
Now you can save the changed HTML from the WYSIWYG Editor directly back into the Scala Template!

Turn it on / off via application.conf:
play-aloha.admin=true

